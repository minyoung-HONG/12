pipeline {
    agent any

    environment {
        TF_WORKSPACE = 'vpc'
    }

    stages {
        stage('Checkout Terraform') {
            steps {
                script {
                    // Checkout from Git repository
                    checkout([$class: 'GitSCM',
                              branches: [[name: 'main']],  // Branch 이름 수정
                              userRemoteConfigs: [[credentialsId: 'git', url: 'https://github.com/minyoung-HONG/vpc.git']]])  // URL 추가
                }
            }
        }

        stage('Terraform Init') {
            steps {
                withCredentials([string(credentialsId: 'TF_TOKEN', variable: 'TF_TOKEN')]) {
                    script {
                        // Set Terraform environment variables and initialize
                        withEnv(["TF_TOKEN_app_terraform_io=${TF_TOKEN}", "TF_WORKSPACE=${TF_WORKSPACE}"]) {
                            sh 'terraform init -input=false'
                        }
                    }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                withCredentials([string(credentialsId: 'TF_TOKEN', variable: 'TF_TOKEN')]) {
                    script {
                        // Set Terraform environment variables and run plan
                        withEnv(["TF_TOKEN_app_terraform_io=${TF_TOKEN}", "TF_WORKSPACE=${TF_WORKSPACE}"]) {
                            sh 'terraform plan'
                        }
                    }
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                withCredentials([string(credentialsId: 'TF_TOKEN', variable: 'TF_TOKEN')]) {
                    script {
                        // Set Terraform environment variables and apply changes
                        withEnv(["TF_TOKEN_app_terraform_io=${TF_TOKEN}", "TF_WORKSPACE=${TF_WORKSPACE}"]) {
                            sh 'terraform apply'
                        }
                    }
                }
            }
        }
    }
}
